-- This script was generated by a beta version of the ERD tool in pg`admin` 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pg`admin`4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE  addresses
(
    id_address int NOT NULL AUTO_INCREMENT,
    fk_person int,
    fk_city int,
    public_place varchar(200) NOT NULL,
    district varchar(100) NOT NULL,
    `number` varchar(12) NOT NULL,
    complement varchar(200) NOT NULL,
    PRIMARY KEY (id_address)
);

CREATE TABLE  alembic_version
(
    version_num varchar(32) NOT NULL,
    PRIMARY KEY (version_num)
);

CREATE TABLE  cities
(
    id_city int NOT NULL AUTO_INCREMENT,
    fk_state int,
    name varchar(100) NOT NULL,
    `desc` varchar(100),
    PRIMARY KEY (id_city)
);

CREATE TABLE  establishments
(
    id_establishment int NOT NULL AUTO_INCREMENT,
    social_reason varchar(200) NOT NULL,
    name varchar(200) NOT NULL,
    cnpj varchar(100) NOT NULL,
    PRIMARY KEY (id_establishment)
);

CREATE TABLE  `flasksqlalchemy-tutorial-users`
(
    id int NOT NULL AUTO_INCREMENT,
    username varchar(64) NOT NULL,
    email varchar(80) NOT NULL,
    created datetime NOT NULL,
    bio text,
    `admin` boolean NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE  owners
(
    id_owner int NOT NULL AUTO_INCREMENT,
    fk_user int,
    fk_establishment int,
    PRIMARY KEY (id_owner)
);

CREATE TABLE  parking_spaces
(
    id_parking_space int NOT NULL AUTO_INCREMENT,
    name varchar(80) NOT NULL,
    `floor` varchar(10) NOT NULL,
    localization varchar(200) NOT NULL,
    status boolean NOT NULL,
    `desc` varchar(500),
    PRIMARY KEY (id_parking_space)
);

CREATE TABLE  payment_method
(
    id_payment_method int NOT NULL AUTO_INCREMENT,
    name varchar(80) NOT NULL,
    `desc` varchar(500),
    PRIMARY KEY (id_payment_method)
);

CREATE TABLE  person
(
    id_person int NOT NULL AUTO_INCREMENT,
    name varchar(80) NOT NULL,
    birth_date date NOT NULL,
    sex varchar(30) NOT NULL,
    cpf varchar(11) NOT NULL,
    rg varchar(50) NOT NULL,
    PRIMARY KEY (id_person)
);

CREATE TABLE  rents
(
    id_rent int NOT NULL AUTO_INCREMENT,
    fk_payment_method int,
    fk_vehicle int,
    fk_user int,
    fk_parking_space int,
    entry_time datetime NOT NULL,
    exit_time datetime NOT NULL,
    hourly_value float NOT NULL,
    `desc` varchar(400) NOT NULL,
    PRIMARY KEY (id_rent)
);

CREATE TABLE  sensors
(
    id_sensor int NOT NULL AUTO_INCREMENT,
    fk_sensor_type int,
    fk_parking_space int,
    name varchar(80) NOT NULL,
    status boolean NOT NULL,
    modelo varchar(200) NOT NULL,
    observacoes varchar(500) NOT NULL,
    PRIMARY KEY (id_sensor)
);

CREATE TABLE  sensors_types
(
    id_sensor_type int NOT NULL AUTO_INCREMENT,
    name varchar(80) NOT NULL,
    `desc` varchar(200) NOT NULL,
    PRIMARY KEY (id_sensor_type)
);

CREATE TABLE  service_category
(
    id_service_category int NOT NULL AUTO_INCREMENT,
    name varchar(80) NOT NULL,
    `desc` varchar(500) NOT NULL,
    PRIMARY KEY (id_service_category)
);

CREATE TABLE  services
(
    id_service int NOT NULL AUTO_INCREMENT,
    fk_service_category int,
    name varchar(80) NOT NULL,
    `desc` varchar(500) NOT NULL,
    valor float NOT NULL,
    PRIMARY KEY (id_service)
);

CREATE TABLE  services_rental
(
    id_service_rent int NOT NULL AUTO_INCREMENT,
    fk_rent int,
    fk_service int,
    status boolean NOT NULL,
    `desc` varchar(500) NOT NULL,
    PRIMARY KEY (id_service_rent)
);

CREATE TABLE  states
(
    id_state int NOT NULL AUTO_INCREMENT,
    name varchar(100) NOT NULL,
    initials varchar(10) NOT NULL,
    `desc` varchar(100) NOT NULL,
    PRIMARY KEY (id_state)
);

CREATE TABLE  telephones
(
    id_telephone int NOT NULL AUTO_INCREMENT,
    fk_person int,
    `type` varchar(20) NOT NULL,
    `number` varchar(30) NOT NULL,
    `desc` varchar(100),
    PRIMARY KEY (id_telephone)
);

CREATE TABLE  users
(
    id_user int NOT NULL AUTO_INCREMENT,
    fk_person int,
    email varchar(80) NOT NULL,
    password varchar(80) NOT NULL,
    `type` varchar(30) NOT NULL,
    status boolean NOT NULL,
    PRIMARY KEY (id_user)
);

CREATE TABLE  vehicle_category
(
    id_vehicle_category int NOT NULL AUTO_INCREMENT,
    name varchar(40) NOT NULL,
    `desc` varchar(40) NOT NULL,
	active boolean not null,
    PRIMARY KEY (id_vehicle_category)
);

CREATE TABLE  vehicle_models
(
    id_modelo_vehicle int NOT NULL AUTO_INCREMENT,
    fk_vehicle_brand int,
    fk_vehicle_category int,
    name varchar(40),
    `desc` varchar(100),
    PRIMARY KEY (id_modelo_vehicle)
);

CREATE TABLE  vehicles
(
    id_vehicle int NOT NULL AUTO_INCREMENT,
    fk_user int,
    fk_model int,
    plate varchar(40) NOT NULL,
    color varchar(50) NOT NULL,
    renavam varchar(60) NOT NULL,
    chassi varchar(60) NOT NULL,
    PRIMARY KEY (id_vehicle)
);

CREATE TABLE  vehicles_brands
(
    id_vehicle_brand int NOT NULL AUTO_INCREMENT,
    name varchar(40) NOT NULL,
    `desc` varchar(40) NOT NULL,
    PRIMARY KEY (id_vehicle_brand)
);

ALTER TABLE addresses
    ADD FOREIGN KEY (fk_city)
    REFERENCES cities (id_city)
    ;


ALTER TABLE addresses
    ADD FOREIGN KEY (fk_person)
    REFERENCES person (id_person)
    ;


ALTER TABLE cities
    ADD FOREIGN KEY (fk_state)
    REFERENCES states (id_state)
    ;


ALTER TABLE owners
    ADD FOREIGN KEY (fk_establishment)
    REFERENCES establishments (id_establishment)
    ;


ALTER TABLE owners
    ADD FOREIGN KEY (fk_user)
    REFERENCES users (id_user)
    ;


ALTER TABLE rents
    ADD FOREIGN KEY (fk_parking_space)
    REFERENCES parking_spaces (id_parking_space)
    ;


ALTER TABLE rents
    ADD FOREIGN KEY (fk_payment_method)
    REFERENCES payment_method (id_payment_method)
    ;


ALTER TABLE rents
    ADD FOREIGN KEY (fk_user)
    REFERENCES users (id_user)
    ;


ALTER TABLE rents
    ADD FOREIGN KEY (fk_vehicle)
    REFERENCES vehicles (id_vehicle)
    ;


ALTER TABLE sensors
    ADD FOREIGN KEY (fk_parking_space)
    REFERENCES parking_spaces (id_parking_space)
    ;


ALTER TABLE sensors
    ADD FOREIGN KEY (fk_sensor_type)
    REFERENCES sensors_types (id_sensor_type)
    ;


ALTER TABLE services
    ADD FOREIGN KEY (fk_service_category)
    REFERENCES service_category (id_service_category)
    ;


ALTER TABLE services_rental
    ADD FOREIGN KEY (fk_rent)
    REFERENCES rents (id_rent)
    ;


ALTER TABLE services_rental
    ADD FOREIGN KEY (fk_service)
    REFERENCES services (id_service)
    ;


ALTER TABLE telephones
    ADD FOREIGN KEY (fk_person)
    REFERENCES person (id_person)
    ;


ALTER TABLE users
    ADD FOREIGN KEY (fk_person)
    REFERENCES person (id_person)
    ;


ALTER TABLE vehicle_models
    ADD FOREIGN KEY (fk_vehicle_brand)
    REFERENCES vehicles_brands (id_vehicle_brand)
    ;


ALTER TABLE vehicle_models
    ADD FOREIGN KEY (fk_vehicle_category)
    REFERENCES vehicle_category (id_vehicle_category)
    ;


ALTER TABLE vehicles
    ADD FOREIGN KEY (fk_model)
    REFERENCES vehicle_models (id_modelo_vehicle)
    ;


ALTER TABLE vehicles
    ADD FOREIGN KEY (fk_user)
    REFERENCES users (id_user)
    ;

